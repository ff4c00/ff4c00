@import "bootstrap-sprockets";
@import "bootstrap";

// 全局通用样式 start
// Sass另一特性是支持变量允许用$符号自定义变量来避免重复代码
// a标签颜色
$a_default_color: #555;
// a标签hover颜色
$a_hover_default_color: #777;

body {
  padding-top: 60px;
  margin: 0 20%;
}

section { overflow: auto; }

textarea { resize: vertical; }

.center { text-align: center; }

.center h1 { margin-bottom: 10px; }

h1, h2, h3, h4, h5, h6 { line-height: 1; }

h1 {
  font-size: 3em;
  letter-spacing: -2px;
  margin-bottom: 30px;
  text-align: center;
}

h2 {
  font-size: 1.2em;
  letter-spacing: -1px;
  margin-bottom: 30px;
  text-align: center;
  font-weight: normal;
  color: #777;
}

a {
  &:hover { text-decoration: none; }
}

.mt-10{ margin-top: 10px; }

// 全局通用样式 end

// logo样式
#logo {
  float: left;
  margin-right: 10px;
  font-size: 1.7em;
  color: $a_hover_default_color;
  text-transform: uppercase;
  letter-spacing: -1px;
  padding-top: 9px;
  font-weight: bold;
  // 在嵌套中当需要引入父级元素时用&符号实现,即 #logo:hover -> &:hover
  // 把scss转换成css时,scss会把 &:hover 编译成 #logo:hover
  &:hover { color: $a_hover_default_color; }
}

// 页脚样式
// Sass语言(样式表编写语言,支持scss格式,官网:http://sass-lang.com)支持嵌套,可以更加形象的展示嵌套元素样式的关系
.footer {
  margin-top: 45px;
  padding-top: 5px;
  border-top: 1px solid #eaeaea;
  color: #777;

  a {
    color: $a_default_color;
    &:hover { color: $a_hover_default_color; }
  }

  small {
    text-align: center;
    margin: 3px auto;
  }

}

// Sass的混入功能(打包一系列样式代码,供多次使用)
@mixin box_sizing {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

//开发模式下页面参数详情样式
.debug_dump {
  clear: both;
  float: left;
  width: 100%;
  margin-top: 45px;
  @include box_sizing;
}

// 侧边栏样式
aside {
  section.user_info { margin-top: 20px; }
  section {
    padding: 10px 0;
    margin-top: 20px;
    &:first-child {
      border: 0;
      padding-top: 0;
    }
    span {
      display: block;
      margin-bottom: 3px;
      line-height: 1px;
    }
    h1 {
      font-size: 1.4em;
      text-align: left;
      letter-spacing: -1px;
      margin-bottom: 3px;
      margin-top: opx;
    }
  }
}

// 头像样式
.gravatar {
  float: left;
  margin-right: 10px;
}

.gravatar_edit { margin-top: 15px; }

// 表单样式
input, textarea, select, .uneditable-input {
  border: 1px solid #bbb;
  width: 100%;
  margin-bottom: 15px;
  @include box_sizing;
}

input { height: auto !important;}

// 错误提醒样式
#error_explanation {
  ul {
    // 待实现: 一个可以动态添加的颜色表,用于存放比较喜欢的颜色.需求:1.页面生成颜色缩略图2.点击某个颜色显示大图3.点击颜色某一区域复制颜色对应的16进制代码
    color: $state-danger-text;
    margin: 0 0 30px 0;
  }
}

// 出错时Rails会自动把有错误的字段包含在一个css类为field_width_errors的div元素中.
.field_width_errors {
  // 使用Sass的@extend函数引入Bootstrap的has-error类.
  @extend .has-error;
  .form-control { color: $state-danger-text; }
}